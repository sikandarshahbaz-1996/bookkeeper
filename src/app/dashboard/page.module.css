.container {
  padding: 40px; /* Keep padding for overall page spacing */
  /* Removed card styles: max-width, margin, background-color, border-radius, box-shadow */
  min-height: calc(100vh - 70px); /* Adjust min-height if needed, minus navbar */
  box-sizing: border-box; 
}

/* .title style removed as h1 was removed */

.profileSection {
  /* This is the main content card */
  background-color: var(--card-background-color);
  padding: 30px 40px; 
  border-radius: 8px;
  box-shadow: var(--card-shadow);
  margin: 0 auto; /* Center the card horizontally, remove top margin */
  max-width: 800px; /* Set max width for the info card */
}

.profileHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 25px;
  padding-bottom: 15px;
  border-bottom: 1px solid var(--border-color);
}

.profileHeader h2 {
  font-size: 22px;
  color: var(--foreground-color);
  margin: 0; /* Remove default margin */
}

.editActions {
    display: flex;
    gap: 10px;
}

.infoBlock {
  margin-bottom: 30px; /* Increased spacing */
  padding-bottom: 20px; /* Increased spacing */
  border-bottom: 1px solid var(--border-color);
}
.infoBlock:last-of-type {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 0;
}


.infoBlock h3 {
  font-size: 18px;
  color: var(--primary-color);
  margin-bottom: 15px; /* Increased spacing */
}

.infoBlock p, .infoBlock li, .infoBlock span {
  font-size: 15px;
  color: var(--foreground-color);
  line-height: 1.6;
  margin-bottom: 8px; /* Spacing for display text */
}

.infoBlock strong {
  color: var(--foreground-color); /* Make strong stand out a bit more */
  font-weight: 600;
  min-width: 120px; /* Adjust as needed for alignment */
  display: inline-block;
  margin-right: 10px;
}

.infoBlock ul {
  list-style: disc;
  padding-left: 25px;
  margin-top: 5px;
}

/* Styles for Edit Mode */
.formRow {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
    gap: 10px;
}
.formRow label {
    flex-shrink: 0; /* Prevent label from shrinking */
}
.formRow .input, .formRow .inputFieldContainer { /* Apply flex properties to the container as well */
    flex-grow: 1;
    max-width: 400px; /* Limit input width */
    display: flex; /* Ensure Autocomplete's inner div can expand if it's also flex */
}
.inputFieldContainer > div { /* Target the div rendered by Autocomplete if needed */
    width: 100%;
}

.input { /* General input style for dashboard edit */
  width: 100%;
  padding: 8px 12px;
  border: 1px solid var(--input-border-color);
  background-color: var(--input-background-color);
  color: var(--input-text-color);
  border-radius: 6px;
  font-size: 15px;
  box-sizing: border-box;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}
.input:focus {
  border-color: var(--input-focus-border-color);
  outline: none;
  box-shadow: var(--input-focus-box-shadow);
}

.dynamicInputGroup {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
  gap: 8px;
}
.dynamicInputGroup .input {
    flex-grow: 1;
}

.addButtonSmall, .removeButtonSmall {
    padding: 5px 10px;
    font-size: 13px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
    border: 1px solid var(--border-color);
    flex-shrink: 0; /* Prevent shrinking */
}
.addButtonSmall {
    background-color: var(--primary-color);
    color: var(--primary-text-color);
    border-color: var(--primary-color-hover);
}
.addButtonSmall:hover {
    background-color: var(--primary-color-hover);
}
.removeButtonSmall {
    background-color: var(--error-color);
    color: var(--primary-text-color); /* Assuming white text on error color */
    border-color: #c42332; /* Darker shade of error for border */
}
.removeButtonSmall:hover {
    background-color: #c42332; /* Darker shade of error */
}

.checkboxGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
  gap: 8px 15px;
  margin-top: 10px;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  font-size: 15px; /* Match signup style */
  color: var(--foreground-color);
  cursor: pointer;
  line-height: 1.4; 
}

.checkboxLabel input[type="checkbox"] {
  appearance: none; 
  -webkit-appearance: none;
  -moz-appearance: none;
  background-color: var(--input-background-color);
  border: 1px solid var(--primary-color);
  border-radius: 3px; 
  width: 18px; 
  height: 18px;
  margin-right: 10px; 
  position: relative;
  cursor: pointer;
  outline: none;
}

.checkboxLabel input[type="checkbox"]:checked {
  background-color: var(--primary-color); 
  border-color: var(--primary-color);
}

/* Custom checkmark */
.checkboxLabel input[type="checkbox"]:checked::after {
  content: '';
  position: absolute;
  left: 5px;
  top: 1px;
  width: 5px;
  height: 10px;
  border: solid var(--primary-text-color); /* Use primary text color for checkmark */
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}


/* Edit/Save/Cancel Buttons */
.editButton, .saveButton, .cancelButton {
  display: inline-block;
  padding: 9px 20px;
  border: none;
  border-radius: 6px;
  font-size: 15px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.3s ease, opacity 0.3s ease;
}
.editButton:hover, .saveButton:hover:not(:disabled), .cancelButton:hover:not(:disabled) {
  opacity: 0.9;
}
.editButton:disabled, .saveButton:disabled, .cancelButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.editButton {
  background-color: var(--primary-color); 
  color: var(--primary-text-color);
  /* Override generic styles to match Navbar buttons */
  padding: 10px 20px; 
  font-size: 16px; 
  font-weight: 600; 
}
.editButton:hover { /* Add hover consistent with primary buttons */
  background-color: var(--primary-color-hover);
  opacity: 1; /* Ensure full opacity on hover, overriding generic .editButton:hover if it had opacity */
}

.saveButton {
  background-color: var(--success-color);
  color: var(--primary-text-color); /* Assuming white text on success */
}
.cancelButton {
   background-color: var(--error-color);
   color: var(--primary-text-color); /* Assuming white text on error */
}


.errorMessage {
  color: var(--error-color); 
  background-color: rgba(220, 53, 69, 0.1); /* Lighter background for error */
  border: 1px solid var(--error-color);
  padding: 15px;
  border-radius: 5px;
  margin-top: 20px;
  font-size: 15px;
  text-align: center;
}

.emptyField {
  font-style: italic;
  color: var(--secondary-color); /* Use secondary color for empty fields */
}

/* Styles for Services Offered with Rates */
.checkboxGridServices { /* Using existing checkboxGrid for now, can be customized if needed */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Adjust minmax for more space if needed */
  gap: 15px 20px; /* Increased gap for clarity */
  margin-top: 10px;
}

.serviceRateItem {
  display: flex;
  flex-direction: column; /* Stack checkbox/label and rate input */
  gap: 8px; /* Space between checkbox and rate input */
}

.serviceInputsContainer { /* New container for rate and duration */
  display: flex;
  flex-direction: column; /* Stack rate and duration */
  gap: 8px; /* Space between rate and duration groups */
  margin-left: 28px; /* Indent under checkbox */
}

.rateInputContainer, .durationInputContainer {
  display: flex;
  flex-direction: column; /* Stack label/input and error message */
  gap: 4px;
}

.inlineLabel { /* For "Rate ($/hr):" and "Duration:" labels */
  font-size: 13px;
  color: var(--secondary-color);
  margin-bottom: 2px;
}

.rateInput, .durationSelect {
  padding: 6px 10px;
  font-size: 14px;
  max-width: 180px; /* Unified max-width */
  /* Inherits .input styles for border, background, etc. */
}

.durationSelect {
  /* Specific select styling if needed, but mostly relies on .input and above */
  appearance: menulist; /* More standard select appearance */
  -webkit-appearance: menulist;
  -moz-appearance: menulist;
}

.inlineError {
  font-size: 12px;
  color: var(--error-color) !important; 
  margin-top: 2px; /* Small space above error message */
}

/* Styles for Availability Section */
.dayAvailabilityRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 0;
  border-bottom: 1px solid var(--border-color);
}
.dayAvailabilityRow:last-child {
  border-bottom: none;
}

.dayNameContainer {
  display: flex;
  align-items: center;
  gap: 10px;
  flex-basis: 200px; /* Give it some base width */
  flex-shrink: 0;
}

.availabilityToggle { /* Re-using checkbox styles, but can be customized */
  /* Similar to .checkboxLabel input[type="checkbox"] but might need adjustments if not inside a label */
  appearance: none; 
  -webkit-appearance: none;
  -moz-appearance: none;
  background-color: var(--input-background-color);
  border: 1px solid var(--primary-color);
  border-radius: 3px; 
  width: 18px; 
  height: 18px;
  cursor: pointer;
  outline: none;
  position: relative; /* For custom checkmark if needed */
}
.availabilityToggle:checked {
  background-color: var(--primary-color); 
  border-color: var(--primary-color);
}
.availabilityToggle:checked::after { /* Custom checkmark */
  content: '';
  position: absolute;
  left: 5px;
  top: 1px;
  width: 5px;
  height: 10px;
  border: solid var(--primary-text-color); /* Use primary text color for checkmark */
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}


.dayLabel {
  font-weight: normal; /* Override strong if it's inside a label with strong */
  color: var(--foreground-color);
  cursor: pointer; /* If clicking label toggles checkbox */
}
.dayLabel strong { /* If day name itself is wrapped in strong */
    color: var(--foreground-color);
    font-weight: 600; /* Make day name stand out a bit */
}


.timeSelectors {
  display: flex;
  align-items: center;
  gap: 10px;
}
.timeSelectors .input { /* For select elements if they use .input class */
  max-width: 130px; /* Adjust width for time selects */
  padding: 6px 8px;
  font-size: 14px;
}
.timeSelectors span { /* For the "to" text */
  color: var(--foreground-color);
}

.dayOffText {
  color: var(--secondary-color); /* Use secondary color for less emphasis */
  font-style: italic;
  flex-grow: 1;
  text-align: right;
  padding-right: 10px; /* Align with time selectors roughly */
}


/* Tab Styles */
.tabs {
  display: flex;
  justify-content: center; /* Center the tab buttons */
  margin-bottom: 20px; /* Space between tabs and content */
  border-bottom: none;
}

.tabButton {
  padding: 10px 20px;
  cursor: pointer;
  border: none;
  background-color: transparent;
  font-size: 16px;
  font-weight: 500;
  color: var(--foreground-color);
  transition: color 0.3s ease, border-bottom-color 0.3s ease;
  border-bottom: 2px solid transparent; /* For active state indicator */
  margin-right: 10px; /* Space between tab buttons */
}

.tabButton:hover {
  color: var(--primary-color);
}

.activeTab {
  color: var(--primary-color);
  border-bottom-color: var(--primary-color); /* Active tab indicator */
}

/* Search Bar Styles */
.searchContainer {
  margin-bottom: 30px;
  padding: 20px;
  background-color: var(--card-background-color);
  border-radius: 8px;
  box-shadow: var(--card-shadow);
  max-width: 800px; /* Align with profileSection width */
  margin-left: auto;
  margin-right: auto;
}

.searchForm {
  display: flex;
  gap: 10px;
  align-items: center;
}

.searchInput {
  flex-grow: 1;
  padding: 10px 15px;
  font-size: 16px;
  border: 1px solid var(--input-border-color);
  background-color: var(--input-background-color);
  color: var(--input-text-color);
  border-radius: 6px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}
.searchInput:focus {
  border-color: var(--input-focus-border-color);
  outline: none;
  box-shadow: var(--input-focus-box-shadow);
}

.searchButton {
  padding: 10px 20px;
  font-size: 16px;
  font-weight: 600;
  background-color: var(--primary-color);
  color: var(--primary-text-color);
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.searchButton:hover {
  background-color: var(--primary-color-hover);
}


/* Add media queries for responsiveness */
@media (max-width: 768px) {
  .container {
    padding: 20px; /* Reduce padding */
  }
  .profileSection {
    padding: 20px 25px; /* Reduce padding */
    max-width: 95%; /* Allow card to be wider */
  }
  .profileHeader {
    flex-direction: column; /* Stack header items */
    align-items: flex-start;
    gap: 10px;
  }
  .editActions {
    width: 100%; /* Make buttons take full width */
    justify-content: flex-start; /* Align buttons start */
    margin-top: 10px;
  }
  .infoBlock strong {
    min-width: 100px; /* Adjust label width */
  }
  .formRow {
    flex-direction: column; /* Stack label and input */
    align-items: flex-start;
    gap: 5px;
  }
   .formRow .input {
    max-width: 100%; /* Allow input full width */
  }
  .checkboxGrid {
     grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); /* Adjust checkbox grid */
  }
}

@media (max-width: 480px) {
   .container {
    padding: 15px;
  }
   .profileSection {
    padding: 15px 20px;
  }
   .profileHeader h2 {
    font-size: 20px;
  }
  .infoBlock h3 {
    font-size: 17px;
  }
   .infoBlock p, .infoBlock li, .infoBlock span {
    font-size: 14px;
  }
  .checkboxGrid {
     grid-template-columns: 1fr; /* Stack checkboxes */
  }
   .editButton, .saveButton, .cancelButton {
    font-size: 14px;
    padding: 8px 15px;
  }
  .infoBlock strong {
    min-width: auto; /* Remove min-width */
    display: block; /* Make label block */
    margin-bottom: 3px;
  }
  .infoBlock p, .infoBlock span {
     margin-left: 0; /* Align text with label */
  }
}
