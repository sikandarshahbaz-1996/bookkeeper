.container {
  display: flex;
  justify-content: center;
  align-items: flex-start; /* Align to top for long form */
  min-height: 100vh; /* Ensure full viewport height for gradient */
  background: var(--hero-background); /* Apply hero gradient */
  color: var(--hero-text-color); /* Text color for elements directly on this background */
  padding: 40px 20px; /* More padding for longer form */
  box-sizing: border-box;
  overflow-y: auto; /* Allow scrolling for the container if content overflows */
}

.formBox {
  background-color: var(--card-background-color);
  padding: 30px 40px;
  border-radius: 8px;
  box-shadow: var(--card-shadow);
  width: 100%;
  max-width: 700px; /* Wider for more complex form */
  text-align: left; /* Align text to left for form sections */
  margin-bottom: 40px; /* Space at the bottom */
}

.title {
  font-size: 26px;
  color: var(--primary-color);
  margin-bottom: 30px;
  font-weight: 700;
  text-align: center;
}

.errorMessage {
  color: var(--error-color);
  background-color: rgba(220, 53, 69, 0.1); /* Lighter background for error */
  border: 1px solid var(--error-color);
  padding: 10px;
  border-radius: 5px;
  margin-bottom: 20px;
  font-size: 14px;
  text-align: center;
}

.form {
  display: flex;
  flex-direction: column;
}

.inputGroup {
  margin-bottom: 20px;
}

/* Styles for password input group */
.passwordGroup {
  position: relative; /* Needed for absolute positioning of the button */
}

.passwordInputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.passwordInputWrapper .input {
  padding-right: 60px; /* Add space for the button */
}

.togglePasswordButton {
  position: absolute;
  right: 1px; /* Position inside the input padding */
  top: 1px;
  bottom: 1px;
  background-color: transparent;
  border: none;
  padding: 0 10px;
  cursor: pointer;
  color: var(--primary-color);
  font-size: 13px;
  font-weight: 600;
}

.togglePasswordButton:hover {
  text-decoration: underline;
}


.label {
  display: block;
  font-size: 14px;
  color: var(--foreground-color); 
  margin-bottom: 8px;
  font-weight: 600;
}

.input {
  width: 100%;
  padding: 12px;
  border: 1px solid var(--input-border-color);
  background-color: var(--input-background-color);
  color: var(--input-text-color);
  border-radius: 6px;
  font-size: 15px;
  box-sizing: border-box;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.input::placeholder {
  color: var(--secondary-color); /* Use secondary color for placeholder */
}

.input:focus {
  border-color: var(--input-focus-border-color);
  outline: none;
  box-shadow: var(--input-focus-box-shadow);
}

.sectionTitle {
  font-size: 18px;
  font-weight: 600;
  color: var(--foreground-color);
  margin-top: 30px;
  margin-bottom: 15px;
  padding-bottom: 8px;
  border-bottom: 1px solid var(--border-color);
}

.dynamicInputGroup {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
  gap: 10px;
}

.dynamicInputGroup .input {
  flex-grow: 1;
}

.addButton,
.removeButton {
  padding: 10px 15px;
  font-size: 14px;
  font-weight: 500;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.2s ease;
  border: 1px solid var(--primary-color);
  min-width: 70px; /* Ensure buttons have some width */
}

.addButton {
  background-color: var(--primary-color);
  color: var(--primary-text-color);
}

.addButton:hover {
  background-color: var(--primary-color-hover);
}

.removeButton {
  background-color: transparent; /* Or var(--card-background-color) */
  color: var(--error-color); 
  border: 1px solid var(--error-color);
}

.removeButton:hover {
  background-color: rgba(220, 53, 69, 0.1); /* Light error background on hover */
  color: #c42332; /* Darker error color text on hover */
}

.checkboxGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Responsive grid */
  gap: 10px 15px;
  margin-bottom: 20px;
}

/* Styles for the new expertise grid and rate inputs */
.expertiseGrid {
  display: grid;
  /* Adjust grid template columns if you want one service per row, or keep as is for multi-column */
  /* For one service per row with rate input beside: */
  /* grid-template-columns: 1fr; */
  gap: 15px; /* Gap between each service item */
  margin-bottom: 20px;
}

.expertiseItem {
  /* If using one service per row, this can be a flex container */
  /* display: flex; */
  /* flex-direction: column; */ /* Stack checkbox/label and rate input vertically */
  /* align-items: flex-start; */
  padding: 10px;
  border: 1px solid var(--border-color-light); /* Optional: border around each item */
  border-radius: 6px;
  background-color: var(--background-color-offset); /* Slightly different background */
}

.rateInputGroup {
  margin-top: 8px; /* Space between checkbox and rate input */
  display: flex;
  flex-direction: column; /* Stack label and input */
  width: 100%; /* Take full width of the item */
}

.rateLabel {
  font-size: 13px;
  color: var(--secondary-color); /* Lighter color for this sub-label */
  margin-bottom: 5px;
  font-weight: 500;
}

.rateInput {
  /* Inherit from .input and then customize if needed */
  width: 100%; /* Make rate input take available width */
  padding: 10px; /* Slightly less padding than main inputs if desired */
  border: 1px solid var(--input-border-color);
  background-color: var(--input-background-color);
  color: var(--input-text-color);
  border-radius: 6px;
  font-size: 14px; /* Slightly smaller font for rate */
  box-sizing: border-box;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.rateInput::placeholder {
  color: var(--secondary-color);
}

.rateInput:focus {
  border-color: var(--input-focus-border-color);
  outline: none;
  box-shadow: var(--input-focus-box-shadow);
}


.checkboxLabel {
  display: flex;
  align-items: center;
  font-size: 15px; /* Slightly larger text */
  color: var(--foreground-color);
  cursor: pointer;
  line-height: 1.4; /* Ensure good spacing if text wraps */
}

.checkboxLabel input[type="checkbox"] {
  appearance: none; /* Needed for custom background/border */
  -webkit-appearance: none;
  -moz-appearance: none;
  background-color: var(--input-background-color);
  border: 1px solid var(--primary-color);
  border-radius: 3px; /* Slightly rounded edges for the checkbox itself */
  width: 18px; /* Slightly larger checkbox */
  height: 18px;
  margin-right: 10px; /* More space between box and text */
  position: relative;
  cursor: pointer;
  outline: none;
}

.checkboxLabel input[type="checkbox"]:checked {
  background-color: var(--primary-color); 
  border-color: var(--primary-color);
}

/* Custom checkmark */
.checkboxLabel input[type="checkbox"]:checked::after {
  content: '';
  position: absolute;
  left: 5px;
  top: 1px;
  width: 5px;
  height: 10px;
  border: solid var(--primary-text-color); /* Use primary text color for checkmark */
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}


.submitButton {
  background-color: var(--primary-color);
  color: var(--primary-text-color);
  padding: 14px; /* Larger button */
  border: none;
  border-radius: 6px;
  font-size: 18px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-top: 30px; /* Space before button */
}

.submitButton:hover {
  background-color: var(--primary-color-hover);
}

.backToSignIn {
  margin-top: 25px;
  text-align: center;
  font-size: 14px;
  color: var(--foreground-color); 
}

.signInLink {
  color: var(--link-color);
  text-decoration: none;
  font-weight: 600;
}

.signInLink:hover {
  text-decoration: underline;
}

@media (max-width: 600px) {
  .formBox {
    padding: 20px 25px;
  }
  .title {
    font-size: 22px;
  }
  .sectionTitle {
    font-size: 17px;
  }
  .checkboxGrid {
    grid-template-columns: 1fr; /* Stack checkboxes on small screens */
  }
  .dynamicInputGroup {
    flex-direction: column; /* Stack input and button */
    align-items: stretch;
  }
  .dynamicInputGroup .input {
    margin-bottom: 8px;
  }
  .addButton, .removeButton {
    width: 100%;
  }
}
